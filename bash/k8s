#! /usr/bin/env bash

if which kubectl &> /dev/null; then
  source <(kubectl completion bash)
  alias k=kubectl
  complete -F __start_kubectl k
fi

if which flux &> /dev/null; then
  source <(flux completion bash)
  alias f=flux
  complete -F __start_flux f
fi

function setkubectx() {
  if [[ ! -z $KUBE_NS ]]; then
    alias k="kubectl --context=$1 --namespace=$KUBE_NS"
    alias kubectl="kubectl --context=$1 --namespace=$KUBE_NS"
    alias f="flux --context=$1 --namespace=$KUBE_NS"
    alias istioctl="istioctl --context=$1 --namespace=$KUBE_NS"
    alias kail="kail --context $1 --ns $KUBE_NS"
  else
    alias k="kubectl --context=$1"
    alias kubectl="kubectl --context=$1"
    alias f="flux --context=$1"
    alias istioctl="istioctl --context=$1"
    alias kail="kail --context $1"
  fi
  export KUBE_CTX=$1
  export HELM_KUBECONTEXT=$1
  complete -W "$(k get namespaces -o jsonpath="{range .items[*]}{.metadata.name}{'\n'}{end}")" setkubens 
}
complete -W "$(kubectl config get-contexts -o name)" setkubectx 

function setkubens() {
  if [[ ! -z $KUBE_CTX ]]; then
    alias k="kubectl --context=$KUBE_CTX --namespace=$1"
    alias kubectl="kubectl --context=$KUBE_CTX --namespace=$1"
    alias f="flux --context=$KUBE_CTX --namespace=$1"
    alias istioctl="istioctl --context=$KUBE_CTX --namespace=$1"
    alias kail="kail --context $KUBE_CTX --ns $1"
  else
    alias k="kubectl --namespace=$1"
    alias f="flux --namespace=$1"
    alias istioctl="istioctl --namespace=$1"
    alias kail="kail --ns $1"
  fi
  export KUBE_NS=$1
  export HELM_NAMESPACE=$1
}

function kube_prompt() {
  if ! [ -z "$KUBE_CTX" ]; then
    echo -n "$blue[K:$green$KUBE_CTX$default]-";
  fi
  if ! [ -z "$KUBE_NS" ]; then
    echo -n "$blue[KN:$green$KUBE_NS$default]-";
  fi
}

alias kshell='k run -i -t fsmith-temp-shell-box --image=ubuntu:latest --restart=Never --command=true --annotations "sidecar.istio.io/inject=false" /bin/bash; k delete pod fsmith-temp-shell-box'

export PROMPT_PLUGINS="kube_prompt $PROMPT_PLUGINS"
